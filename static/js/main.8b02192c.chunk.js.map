{"version":3,"sources":["components/PageNotFound/PageNotFound.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["PageNotFound","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","find","mom","dad","peopleWithParents","catch","finally","length","HomePage","Navigation","getLinkClass","isActive","role","App","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8b02192c.chunk.js","sourcesContent":["export const PageNotFound: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person : Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nconst peopleWithParents = (people: Person[]): Person[] => {\n  return people.map(person => {\n    const mother = people.find(mom => mom.name === person.motherName);\n    const father = people.find(dad => dad.name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleWithParents(peopleFromServer)))\n      .catch(() => setHasError(true))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">People Page</h1>\n        </div>\n      </div>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !hasError && people.length === 0) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && !isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => (\n    classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { Navigation } from './components/Navigation/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <Routes>\n      <Route index element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/people/\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}